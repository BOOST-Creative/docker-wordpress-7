worker_processes  1;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    keepalive_timeout 65;

    server_tokens off;

    # Enable gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_proxied any;

    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    # Forward the cloudfront scheme from upstream
    map "$http_cloudfront_forwarded_proto$http_x_forwarded_proto" $forwarded_scheme {
         default off;
         "~*(https)" on;
     }

    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;

        sendfile off;

        # Increase proxy buffers for large requests
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Upload limit
        client_max_body_size 50m;
        client_body_buffer_size 128k;

        root /usr/src/wordpress;
        index index.php;

        # Protect System Files
        location = /nginx.conf { deny all; }
        location ~ /\.htaccess$ { deny all; }
        location ~ /readme\.html$ { deny all; }
        location ~ /readme\.txt$ { deny all; }
        location ~ /wp-config.php$ { deny all; }
        location ~ ^/wp-admin/includes/ { deny all; }
        location ~ ^/wp-includes/[^/]+\.php$ { deny all; }
        location ~ ^/wp-includes/js/tinymce/langs/.+\.php$ { deny all; }
        location ~ ^/wp-includes/theme-compat/ { deny all; }
        location ~ ^.*/\.git/.*$ { deny all; }
        location ~ ^.*/\.svn/.*$ { deny all; }

        # Redirect requests for autodiscover.xml to autodiscover.<tld>
        location ~ autodiscover.(xml|src)$ {
            rewrite ^(.*)$ https://autodiscover.$host$request_uri break;
            return 301 $scheme://autodiscover.$host$request_uri;
        }

        # Disable PHP in Uploads
        location ~ ^/wp\-content/uploads/.*\.(?:php[1-7]?|pht|phtml?|phps)$ { deny all; }

        # Disable PHP in Plugins
        location ~ ^/wp\-content/plugins/.*\.(?:php[1-7]?|pht|phtml?|phps)$ { deny all; }

        # Disable PHP in Themes
        location ~ ^/wp\-content/themes/.*\.(?:php[1-7]?|pht|phtml?|phps)$ { deny all; }

        # Disable XML-RPC
        location ~ xmlrpc.php { deny all; }

        # WordPress User enumeration blocking author query string
        if ($args ~* "^author=([0-9]+|{num:[0-9]+)") {
            return 403;
        }

        # WordPress User Enumeration author page pretty link
        if ($request_uri ~ "/author/") {
            return 403;
        }

        # Block user enumeration sitemap - note that this covers the unicode version of - as %2d
        if ($request_uri ~ "wp-sitemap-users-[0-9]+.xml") {
            return 403;
        }

        # WordPress REST API User Enumeration
        # if ($request_uri ~ "/wp-json/wp/v2/users") {
        #     return 403;
        # }

        # redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        # Based on https://codeable.io/wordpress-developers-intro-to-docker-part-two/
        location /wp-content {
            root /usr/src/wordpress;
            expires 7d;
            add_header Cache-Control "public";
        }

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            try_files $uri $uri/ /index.php?$args;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            #fastcgi_intercept_errors on;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;

            fastcgi_index index.php;
            fastcgi_pass 127.0.0.1:9000;

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;

            # Forward the scheme from upstream
            fastcgi_param HTTPS $forwarded_scheme;
        }

        # deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }
    }
}
